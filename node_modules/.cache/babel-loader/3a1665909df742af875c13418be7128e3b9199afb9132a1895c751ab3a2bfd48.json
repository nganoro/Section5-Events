{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar littleStateMachine = require('little-state-machine');\nvar React = require('react');\nvar uuid = require('uuid');\nvar reactSimpleAnimate = require('react-simple-animate');\nvar styled = require('@emotion/styled');\nvar isUndefined$1 = require('lodash/isUndefined');\nvar isObject$1 = require('lodash/isObject');\nvar get$1 = require('lodash/get');\nvar useDeepCompareEffect = require('use-deep-compare-effect');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);\nvar isUndefined__default = /*#__PURE__*/_interopDefaultLegacy(isUndefined$1);\nvar isObject__default = /*#__PURE__*/_interopDefaultLegacy(isObject$1);\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get$1);\nvar useDeepCompareEffect__default = /*#__PURE__*/_interopDefaultLegacy(useDeepCompareEffect);\nvar isCheckBoxInput = element => element.type === 'checkbox';\nvar isDateObject = value => value instanceof Date;\nvar isNullOrUndefined = value => value == null;\nconst isObjectType = value => typeof value === 'object';\nvar isObject = value => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value);\nvar getEventValue = event => isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;\nvar getNodeParentName = name => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\nvar isPlainObject = tempObject => {\n  const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n  return isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf');\n};\nvar isWeb = typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined' && typeof document !== 'undefined';\nfunction cloneObject(data) {\n  let copy;\n  const isArray = Array.isArray(data);\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) && (isArray || isObject(data))) {\n    copy = isArray ? [] : {};\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n  return copy;\n}\nvar compact = value => Array.isArray(value) ? value.filter(Boolean) : [];\nvar isUndefined = val => val === undefined;\nvar get = (obj, path, defaultValue) => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n  const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\nconst EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change'\n};\nconst VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nconst INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nconst HookFormContext = React__default[\"default\"].createContext(null);\n/**\r\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @returns return all useForm methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\nconst useFormContext = () => React__default[\"default\"].useContext(HookFormContext);\nvar getProxyFormState = function (formState, control, localProxyFormState) {\n  let isRoot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const result = {\n    defaultValues: control._defaultValues\n  };\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key;\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      }\n    });\n  }\n  return result;\n};\nvar isEmptyObject = value => isObject(value) && !Object.keys(value).length;\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n  updateFormState(formStateData);\n  const {\n    name,\n    ...formState\n  } = formStateData;\n  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find(key => _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all));\n};\nvar convertToArrayPayload = value => Array.isArray(value) ? value : [value];\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName ? name === signalName : !name || !signalName || name === signalName || convertToArrayPayload(name).some(currentName => currentName && (currentName.startsWith(signalName) || signalName.startsWith(currentName)));\nfunction useSubscribe(props) {\n  const _props = React__default[\"default\"].useRef(props);\n  _props.current = props;\n  React__default[\"default\"].useEffect(() => {\n    const subscription = !props.disabled && _props.current.subject && _props.current.subject.subscribe({\n      next: _props.current.next\n    });\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n\n/**\r\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\r\n *\r\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, control } = useForm({\r\n *     defaultValues: {\r\n *     firstName: \"firstName\"\r\n *   }});\r\n *   const { dirtyFields } = useFormState({\r\n *     control\r\n *   });\r\n *   const onSubmit = (data) => console.log(data);\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\r\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\nfunction useFormState(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    disabled,\n    name,\n    exact\n  } = props || {};\n  const [formState, updateFormState] = React__default[\"default\"].useState(control._formState);\n  const _mounted = React__default[\"default\"].useRef(true);\n  const _localProxyFormState = React__default[\"default\"].useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  });\n  const _name = React__default[\"default\"].useRef(name);\n  _name.current = name;\n  useSubscribe({\n    disabled,\n    next: value => _mounted.current && shouldSubscribeByName(_name.current, value.name, exact) && shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) && updateFormState({\n      ...control._formState,\n      ...value\n    }),\n    subject: control._subjects.state\n  });\n  React__default[\"default\"].useEffect(() => {\n    _mounted.current = true;\n    const isDirty = control._proxyFormState.isDirty && control._getDirty();\n    if (isDirty !== control._formState.isDirty) {\n      control._subjects.state.next({\n        isDirty\n      });\n    }\n    _localProxyFormState.current.isValid && control._updateValid(true);\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n  return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\nvar isString = value => typeof value === 'string';\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n  if (Array.isArray(names)) {\n    return names.map(fieldName => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n  }\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n};\n\n/**\r\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\r\n *\r\n * @remarks\r\n *\r\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\r\n *\r\n * @example\r\n * ```tsx\r\n * const { watch } = useForm();\r\n * const values = useWatch({\r\n *   name: \"fieldName\"\r\n *   control,\r\n * })\r\n * ```\r\n */\nfunction useWatch(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact\n  } = props || {};\n  const _name = React__default[\"default\"].useRef(name);\n  _name.current = name;\n  useSubscribe({\n    disabled,\n    subject: control._subjects.values,\n    next: formState => {\n      if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n        updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n      }\n    }\n  });\n  const [value, updateValue] = React__default[\"default\"].useState(control._getWatch(name, defaultValue));\n  React__default[\"default\"].useEffect(() => control._removeUnmounted());\n  return value;\n}\nvar isKey = value => /^\\w*$/.test(value);\nvar stringToPath = input => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\nfunction set(object, path, value) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? {\n  ...errors[name],\n  types: {\n    ...(errors[name] && errors[name].types ? errors[name].types : {}),\n    [type]: message || true\n  }\n} : {};\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n    if (field) {\n      const {\n        _f,\n        ...currentField\n      } = field;\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\nvar getValidationModes = mode => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched\n});\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent && (_names.watchAll || _names.watch.has(name) || [..._names.watch].some(watchName => name.startsWith(watchName) && /^\\.\\w+/.test(name.slice(watchName.length))));\nvar updateFieldArrayRootError = (errors, error, name) => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\nvar isBoolean = value => typeof value === 'boolean';\nvar isFileInput = element => element.type === 'file';\nvar isFunction = value => typeof value === 'function';\nvar isHTMLElement = value => {\n  if (!isWeb) {\n    return false;\n  }\n  const owner = value ? value.ownerDocument : 0;\n  return value instanceof (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement);\n};\nvar isMessage = value => isString(value);\nvar isRadioInput = element => element.type === 'radio';\nvar isRegex = value => value instanceof RegExp;\nconst defaultResult = {\n  value: false,\n  isValid: false\n};\nconst validResult = {\n  value: true,\n  isValid: true\n};\nvar getCheckboxValue = options => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options.filter(option => option && option.checked && !option.disabled).map(option => option.value);\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n    return options[0].checked && !options[0].disabled ?\n    // @ts-expect-error expected to work in the browser\n    options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === '' ? validResult : {\n      value: options[0].value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n  return defaultResult;\n};\nconst defaultReturn = {\n  isValid: false,\n  value: null\n};\nvar getRadioValue = options => Array.isArray(options) ? options.reduce((previous, option) => option && option.checked && !option.disabled ? {\n  isValid: true,\n  value: option.value\n} : previous, defaultReturn) : defaultReturn;\nfunction getValidateError(result, ref) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref\n    };\n  }\n}\nvar getValueAndMessage = validationData => isObject(validationData) && !isRegex(validationData) ? validationData : {\n  value: validationData,\n  message: ''\n};\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled\n  } = field._f;\n  const inputValue = get(formValues, name);\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef = refs ? refs[0] : ref;\n  const setCustomValidity = message => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = (valueAsNumber || isFileInput(ref)) && isUndefined(ref.value) && isUndefined(inputValue) || isHTMLElement(ref) && ref.value === '' || inputValue === '' || Array.isArray(inputValue) && !inputValue.length;\n  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n  const getMinMaxMessage = function (exceedMax, maxLengthMessage, minLengthMessage) {\n    let maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n    let minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message)\n    };\n  };\n  if (isFieldArray ? !Array.isArray(inputValue) || !inputValue.length : required && (!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid)) {\n    const {\n      value,\n      message\n    } = isMessage(required) ? {\n      value: !!required,\n      message: required\n    } : getValueAndMessage(required);\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message)\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n      const valueNumber = ref.valueAsNumber || (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate = ref.valueAsDate || new Date(inputValue);\n      const convertTimeToDate = time => new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value) : isWeek ? inputValue > maxOutput.value : valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value) : isWeek ? inputValue < minOutput.value : valueDate < new Date(minOutput.value);\n      }\n    }\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name].message);\n        return error;\n      }\n    }\n  }\n  if ((maxLength || minLength) && !isEmpty && (isString(inputValue) || isFieldArray && Array.isArray(inputValue))) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > maxLengthOutput.value;\n    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < minLengthOutput.value;\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name].message);\n        return error;\n      }\n    }\n  }\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const {\n      value: patternValue,\n      message\n    } = getValueAndMessage(pattern);\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message)\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message)\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {};\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n        const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message)\n          };\n          setCustomValidity(validateError.message);\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n  setCustomValidity(true);\n  return error;\n};\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nfunction isEmptyArray(obj) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction unset(object, path) {\n  const paths = Array.isArray(path) ? path : isKey(path) ? [path] : stringToPath(path);\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n  const index = paths.length - 1;\n  const key = paths[index];\n  if (childObject) {\n    delete childObject[key];\n  }\n  if (index !== 0 && (isObject(childObject) && isEmptyObject(childObject) || Array.isArray(childObject) && isEmptyArray(childObject))) {\n    unset(object, paths.slice(0, -1));\n  }\n  return object;\n}\nfunction createSubject() {\n  let _observers = [];\n  const next = value => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n  const subscribe = observer => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter(o => o !== observer);\n      }\n    };\n  };\n  const unsubscribe = () => {\n    _observers = [];\n  };\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe\n  };\n}\nvar isPrimitive = value => isNullOrUndefined(value) || !isObjectType(value);\nfunction deepEqual(object1, object2) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (const key of keys1) {\n    const val1 = object1[key];\n    if (!keys2.includes(key)) {\n      return false;\n    }\n    if (key !== 'ref') {\n      const val2 = object2[key];\n      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual(val1, val2) : val1 !== val2) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nvar isMultipleSelect = element => element.type === `select-multiple`;\nvar isRadioOrCheckbox = ref => isRadioInput(ref) || isCheckBoxInput(ref);\nvar live = ref => isHTMLElement(ref) && ref.isConnected;\nvar objectHasFunction = data => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\nfunction markFieldsDirty(data) {\n  let fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const isParentNodeArray = Array.isArray(data);\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n  return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n  const isParentNodeArray = Array.isArray(data);\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        if (isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key])) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key]) ? markFieldsDirty(data[key], []) : {\n            ...markFieldsDirty(data[key])\n          };\n        } else {\n          getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n  return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\nvar getFieldValueAs = (value, _ref) => {\n  let {\n    valueAsNumber,\n    valueAsDate,\n    setValueAs\n  } = _ref;\n  return isUndefined(value) ? value : valueAsNumber ? value === '' ? NaN : value ? +value : value : valueAsDate && isString(value) ? new Date(value) : setValueAs ? setValueAs(value) : value;\n};\nfunction getFieldValue(_f) {\n  const ref = _f.ref;\n  if (_f.refs ? _f.refs.every(ref => ref.disabled) : ref.disabled) {\n    return;\n  }\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(_ref2 => {\n      let {\n        value\n      } = _ref2;\n      return value;\n    });\n  }\n  if (isCheckBoxInput(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n  const fields = {};\n  for (const name of fieldsNames) {\n    const field = get(_fields, name);\n    field && set(fields, name, field._f);\n  }\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation\n  };\n};\nvar getRuleValue = rule => isUndefined(rule) ? rule : isRegex(rule) ? rule.source : isObject(rule) ? isRegex(rule.value) ? rule.value.source : rule.value : rule;\nvar hasValidation = options => options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);\nfunction schemaErrorLookup(errors, _fields, name) {\n  const error = get(errors, name);\n  if (error || isKey(name)) {\n    return {\n      error,\n      name\n    };\n  }\n  const names = name.split('.');\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return {\n        name\n      };\n    }\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError\n      };\n    }\n    names.pop();\n  }\n  return {\n    name\n  };\n}\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true\n};\nfunction createFormControl() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let flushRootRender = arguments.length > 1 ? arguments[1] : undefined;\n  let _options = {\n    ...defaultOptions,\n    ...props\n  };\n  let _formState = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: true,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {}\n  };\n  let _fields = {};\n  let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values) ? cloneObject(_options.defaultValues || _options.values) || {} : {};\n  let _formValues = _options.shouldUnregister ? {} : cloneObject(_defaultValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false\n  };\n  let _names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  };\n  let delayErrorCallback;\n  let timer = 0;\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  };\n  const _subjects = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject()\n  };\n  const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n  const debounce = callback => wait => {\n    clearTimeout(timer);\n    timer = setTimeout(callback, wait);\n  };\n  const _updateValid = async shouldUpdateValid => {\n    if (_proxyFormState.isValid || shouldUpdateValid) {\n      const isValid = _options.resolver ? isEmptyObject((await _executeSchema()).errors) : await executeBuiltInValidation(_fields, true);\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid\n        });\n      }\n    }\n  };\n  const _updateIsValidating = value => _proxyFormState.isValidating && _subjects.state.next({\n    isValidating: value\n  });\n  const _updateFieldArray = function (name) {\n    let values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let method = arguments.length > 2 ? arguments[2] : undefined;\n    let args = arguments.length > 3 ? arguments[3] : undefined;\n    let shouldSetValues = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let shouldUpdateFieldsAndState = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    if (args && method) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_formState.errors, name))) {\n        const errors = method(get(_formState.errors, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n      if (_proxyFormState.touchedFields && shouldUpdateFieldsAndState && Array.isArray(get(_formState.touchedFields, name))) {\n        const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n  const updateErrors = (name, error) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors\n    });\n  };\n  const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n    const field = get(_fields, name);\n    if (field) {\n      const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n      isUndefined(defaultValue) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f)) : setFieldValue(name, defaultValue);\n      _state.mount && _updateValid();\n    }\n  };\n  const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output = {\n      name\n    };\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n      const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n      isPreviousDirty = get(_formState.dirtyFields, name);\n      isCurrentFieldPristine ? unset(_formState.dirtyFields, name) : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField = shouldUpdateField || _proxyFormState.dirtyFields && isPreviousDirty !== !isCurrentFieldPristine;\n    }\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField = shouldUpdateField || _proxyFormState.touchedFields && isPreviousFieldTouched !== isBlurEvent;\n      }\n    }\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n    return shouldUpdateField ? output : {};\n  };\n  const shouldRenderByError = (name, isValid, error, fieldState) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid = _proxyFormState.isValid && isBoolean(isValid) && _formState.isValid !== isValid;\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n    }\n    if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? {\n          isValid\n        } : {}),\n        errors: _formState.errors,\n        name\n      };\n      _formState = {\n        ..._formState,\n        ...updatedFormState\n      };\n      _subjects.state.next(updatedFormState);\n    }\n    _updateIsValidating(false);\n  };\n  const _executeSchema = async name => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n  const executeSchemaAndUpdateState = async names => {\n    const {\n      errors\n    } = await _executeSchema();\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n    return errors;\n  };\n  const executeBuiltInValidation = async function (fields, shouldOnlyCheckValid) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      valid: true\n    };\n    for (const name in fields) {\n      const field = fields[name];\n      if (field) {\n        const {\n          _f,\n          ...fieldValue\n        } = field;\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation, isFieldArrayRoot);\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n          !shouldOnlyCheckValid && (get(fieldError, _f.name) ? isFieldArrayRoot ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name) : set(_formState.errors, _f.name, fieldError[_f.name]) : unset(_formState.errors, _f.name));\n        }\n        fieldValue && (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n      }\n    }\n    return context.valid;\n  };\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field = get(_fields, name);\n      field && (field._f.refs ? field._f.refs.every(ref => !live(ref)) : !live(field._f.ref)) && unregister(name);\n    }\n    _names.unMount = new Set();\n  };\n  const _getDirty = (name, data) => (name && data && set(_formValues, name, data), !deepEqual(getValues(), _defaultValues));\n  const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n    ...(_state.mount ? _formValues : isUndefined(defaultValue) ? _defaultValues : isString(names) ? {\n      [names]: defaultValue\n    } : defaultValue)\n  }, isGlobal, defaultValue);\n  const _getFieldArray = name => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n  const setFieldValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n    let fieldValue = value;\n    if (field) {\n      const fieldReference = field._f;\n      if (fieldReference) {\n        !fieldReference.disabled && set(_formValues, name, getFieldValueAs(value, fieldReference));\n        fieldValue = isHTMLElement(fieldReference.ref) && isNullOrUndefined(value) ? '' : value;\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(optionRef => optionRef.selected = fieldValue.includes(optionRef.value));\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1 ? fieldReference.refs.forEach(checkboxRef => (!checkboxRef.defaultChecked || !checkboxRef.disabled) && (checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find(data => data === checkboxRef.value) : fieldValue === checkboxRef.value)) : fieldReference.refs[0] && (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(radioRef => radioRef.checked = radioRef.value === fieldValue);\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: {\n                ..._formValues\n              }\n            });\n          }\n        }\n      }\n    }\n    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n    options.shouldValidate && trigger(name);\n  };\n  const setValues = (name, value, options) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n  const setValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n    set(_formValues, name, cloneValue);\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: {\n          ..._formValues\n        }\n      });\n      if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue)\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue) ? setValues(name, cloneValue, options) : setFieldValue(name, cloneValue, options);\n    }\n    isWatched(name, _names) && _subjects.state.next({\n      ..._formState\n    });\n    _subjects.values.next({\n      name,\n      values: {\n        ..._formValues\n      }\n    });\n    !_state.mount && flushRootRender();\n  };\n  const onChange = async event => {\n    const target = event.target;\n    let name = target.name;\n    const field = get(_fields, name);\n    const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !get(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n      const watched = isWatched(name, _names, isBlurEvent);\n      set(_formValues, name, fieldValue);\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n      !isBlurEvent && _subjects.values.next({\n        name,\n        type: event.type,\n        values: {\n          ..._formValues\n        }\n      });\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n        return shouldRender && _subjects.state.next({\n          name,\n          ...(watched ? {} : fieldState)\n        });\n      }\n      !isBlurEvent && watched && _subjects.state.next({\n        ..._formState\n      });\n      _updateIsValidating(true);\n      if (_options.resolver) {\n        const {\n          errors\n        } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n        const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n        if (error) {\n          isValid = false;\n        } else if (_proxyFormState.isValid) {\n          isValid = await executeBuiltInValidation(_fields, true);\n        }\n      }\n      field._f.deps && trigger(field._f.deps);\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n  const trigger = async function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name);\n    _updateIsValidating(true);\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n      isValid = isEmptyObject(errors);\n      validationResult = name ? !fieldNames.some(name => get(errors, name)) : isValid;\n    } else if (name) {\n      validationResult = (await Promise.all(fieldNames.map(async fieldName => {\n        const field = get(_fields, fieldName);\n        return await executeBuiltInValidation(field && field._f ? {\n          [fieldName]: field\n        } : field);\n      }))).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n    _subjects.state.next({\n      ...(!isString(name) || _proxyFormState.isValid && isValid !== _formState.isValid ? {} : {\n        name\n      }),\n      ...(_options.resolver || !name ? {\n        isValid\n      } : {}),\n      errors: _formState.errors,\n      isValidating: false\n    });\n    options.shouldFocus && !validationResult && focusFieldBy(_fields, key => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\n    return validationResult;\n  };\n  const getValues = fieldNames => {\n    const values = {\n      ..._defaultValues,\n      ...(_state.mount ? _formValues : {})\n    };\n    return isUndefined(fieldNames) ? values : isString(fieldNames) ? get(values, fieldNames) : fieldNames.map(name => get(values, name));\n  };\n  const getFieldState = (name, formState) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name)\n  });\n  const clearErrors = name => {\n    name && convertToArrayPayload(name).forEach(inputName => unset(_formState.errors, inputName));\n    _subjects.state.next({\n      errors: name ? _formState.errors : {}\n    });\n  };\n  const setError = (name, error, options) => {\n    const ref = (get(_fields, name, {\n      _f: {}\n    })._f || {}).ref;\n    set(_formState.errors, name, {\n      ...error,\n      ref\n    });\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false\n    });\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n  const watch = (name, defaultValue) => isFunction(name) ? _subjects.values.subscribe({\n    next: payload => name(_getWatch(undefined, defaultValue), payload)\n  }) : _getWatch(name, defaultValue, true);\n  const unregister = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);\n      }\n    }\n    _subjects.values.next({\n      values: {\n        ..._formValues\n      }\n    });\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : {\n        isDirty: _getDirty()\n      })\n    });\n    !options.keepIsValid && _updateValid();\n  };\n  const register = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : {\n          ref: {\n            name\n          }\n        }),\n        name,\n        mount: true,\n        ...options\n      }\n    });\n    _names.mount.add(name);\n    field ? disabledIsDefined && set(_formValues, name, options.disabled ? undefined : get(_formValues, name, getFieldValue(field._f))) : updateValidAndValue(name, true, options.value);\n    return {\n      ...(disabledIsDefined ? {\n        disabled: options.disabled\n      } : {}),\n      ...(_options.shouldUseNativeValidation ? {\n        required: !!options.required,\n        min: getRuleValue(options.min),\n        max: getRuleValue(options.max),\n        minLength: getRuleValue(options.minLength),\n        maxLength: getRuleValue(options.maxLength),\n        pattern: getRuleValue(options.pattern)\n      } : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: ref => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n          const fieldRef = isUndefined(ref.value) ? ref.querySelectorAll ? ref.querySelectorAll('input,select,textarea')[0] || ref : ref : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n          if (radioOrCheckbox ? refs.find(option => option === fieldRef) : fieldRef === field._f.ref) {\n            return;\n          }\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox ? {\n                refs: [...refs.filter(live), fieldRef, ...(Array.isArray(get(_defaultValues, name)) ? [{}] : [])],\n                ref: {\n                  type: fieldRef.type,\n                  name\n                }\n              } : {\n                ref: fieldRef\n              })\n            }\n          });\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n          if (field._f) {\n            field._f.mount = false;\n          }\n          (_options.shouldUnregister || options.shouldUnregister) && !(isNameInFieldArray(_names.array, name) && _state.action) && _names.unMount.add(name);\n        }\n      }\n    };\n  };\n  const _focusError = () => _options.shouldFocusError && focusFieldBy(_fields, key => key && get(_formState.errors, key), _names.mount);\n  const handleSubmit = (onValid, onInvalid) => async e => {\n    if (e) {\n      e.preventDefault && e.preventDefault();\n      e.persist && e.persist();\n    }\n    let fieldValues = cloneObject(_formValues);\n    _subjects.state.next({\n      isSubmitting: true\n    });\n    if (_options.resolver) {\n      const {\n        errors,\n        values\n      } = await _executeSchema();\n      _formState.errors = errors;\n      fieldValues = values;\n    } else {\n      await executeBuiltInValidation(_fields);\n    }\n    unset(_formState.errors, 'root');\n    if (isEmptyObject(_formState.errors)) {\n      _subjects.state.next({\n        errors: {}\n      });\n      await onValid(fieldValues, e);\n    } else {\n      if (onInvalid) {\n        await onInvalid({\n          ..._formState.errors\n        }, e);\n      }\n      _focusError();\n      setTimeout(_focusError);\n    }\n    _subjects.state.next({\n      isSubmitted: true,\n      isSubmitting: false,\n      isSubmitSuccessful: isEmptyObject(_formState.errors),\n      submitCount: _formState.submitCount + 1,\n      errors: _formState.errors\n    });\n  };\n  const resetField = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue ? _getDirty(name, get(_defaultValues, name)) : _getDirty();\n      }\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n      _subjects.state.next({\n        ..._formState\n      });\n    }\n  };\n  const _reset = function (formValues) {\n    let keepStateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values = formValues && !isEmptyObject(formValues) ? cloneUpdatedValues : _defaultValues;\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName) ? set(values, fieldName, get(_formValues, fieldName)) : setValue(fieldName, get(values, fieldName));\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n        _fields = {};\n      }\n      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject(_defaultValues) : {} : cloneUpdatedValues;\n      _subjects.array.next({\n        values: {\n          ...values\n        }\n      });\n      _subjects.values.next({\n        values: {\n          ...values\n        }\n      });\n    }\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: ''\n    };\n    !_state.mount && flushRootRender();\n    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n    _state.watch = !!props.shouldUnregister;\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,\n      isDirty: keepStateOptions.keepDirty ? _formState.isDirty : !!(keepStateOptions.keepDefaultValues && !deepEqual(formValues, _defaultValues)),\n      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : false,\n      dirtyFields: keepStateOptions.keepDirtyValues ? _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? getDirtyFields(_defaultValues, formValues) : {},\n      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  };\n  const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues) ? formValues(_formValues) : formValues, keepStateOptions);\n  const setFocus = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs ? fieldReference.refs[0] : fieldReference.ref;\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n  const _updateFormState = updatedFormState => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState\n    };\n  };\n  if (isFunction(_options.defaultValues)) {\n    _options.defaultValues().then(values => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false\n      });\n    });\n  }\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _reset,\n      _updateFormState,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value\n        };\n      }\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState\n  };\n}\n\n/**\r\n * Custom hook to manage the entire form.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\r\n *\r\n * @param props - form configuration and validation parameters.\r\n *\r\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   console.log(watch(\"example\"));\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input defaultValue=\"test\" {...register(\"example\")} />\r\n *       <input {...register(\"exampleRequired\", { required: true })} />\r\n *       {errors.exampleRequired && <span>This field is required</span>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\nfunction useForm() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const _formControl = React__default[\"default\"].useRef();\n  const [formState, updateFormState] = React__default[\"default\"].useState({\n    isDirty: false,\n    isValidating: false,\n    isLoading: true,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: isFunction(props.defaultValues) ? undefined : props.defaultValues\n  });\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props, () => updateFormState(formState => ({\n        ...formState\n      }))),\n      formState\n    };\n  }\n  const control = _formControl.current.control;\n  control._options = props;\n  useSubscribe({\n    subject: control._subjects.state,\n    next: value => {\n      if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n        updateFormState({\n          ...control._formState\n        });\n      }\n    }\n  });\n  React__default[\"default\"].useEffect(() => {\n    if (props.values && !deepEqual(props.values, control._defaultValues)) {\n      control._reset(props.values, control._options.resetOptions);\n    }\n  }, [props.values, control]);\n  React__default[\"default\"].useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({\n        ...control._formState\n      });\n    }\n    control._removeUnmounted();\n  });\n  _formControl.current.formState = getProxyFormState(formState, control);\n  return _formControl.current;\n}\nvar colors = {\n  primary: '#0e101c',\n  secondary: '#bf1650',\n  lightBlue: '#516391',\n  blue: '#1e2a4a',\n  lightPink: '#ec5990',\n  errorPink: '#fbecf2',\n  buttonBlue: '#191d3a',\n  link: '#ff7aa8',\n  green: '#1bda2b'\n};\nconst paraGraphDefaultStyle = {\n  fontSize: 13,\n  lineHeight: '20px'\n};\nconst Button = styled__default[\"default\"].button`\n  appearance: none;\n  margin: 0;\n  border: 0;\n  color: white;\n  padding: 5px !important;\n  border-radius: 0 !important;\n  background: ${props => props.hideBackground ? `` : `${colors.blue} !important`};\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n`;\nButton.defaultProps = {\n  type: 'button'\n};\nconst CircleButton = styled__default[\"default\"](Button)`\n  font-size: 14px;\n  font-weight: bold;\n  margin: 0 4px 0 auto;\n  background: none !important;\n  display: flex;\n  width: 25px;\n  height: 25px;\n  justify-content: center;\n  line-height: 14px !important;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n\n  &:active {\n    background: black;\n  }\n`;\nconst Input = styled__default[\"default\"].input`\n  &::placeholder {\n    color: #b3b3b3;\n  }\n\n  &:focus::placeholder {\n    color: white;\n  }\n`;\nconst Table = styled__default[\"default\"].table`\n  transition: 0.3s all;\n\n  &:hover {\n    background: ${colors.primary};\n  }\n`;\nconst Header = _ref3 => {\n  let {\n    setVisible,\n    control\n  } = _ref3;\n  const {\n    isValid\n  } = useFormState({\n    control\n  });\n  return React__namespace.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: 10,\n      backgroundColor: 'transparent'\n    }\n  }, React__namespace.createElement(\"p\", {\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0,\n      fontWeight: 400,\n      fontSize: 12\n    })\n  }, React__namespace.createElement(\"span\", {\n    style: {\n      transition: '0.5s all',\n      color: isValid ? colors.green : colors.lightPink\n    }\n  }, \"\\u25A0\"), ' ', \"React Hook Form\"), React__namespace.createElement(CircleButton, {\n    title: \"Close dev panel\",\n    onClick: () => setVisible(false)\n  }, \"\\u2715\"));\n};\nconst PanelTable = _ref4 => {\n  let {\n    refObject,\n    hasError,\n    isDirty,\n    fieldsValues,\n    isNative,\n    errorMessage,\n    errorType,\n    type,\n    isTouched,\n    name,\n    collapseAll\n  } = _ref4;\n  const [collapse, setCollapse] = React__namespace.useState(false);\n  React__namespace.useEffect(() => {\n    setCollapse(!collapseAll);\n  }, [collapseAll]);\n  let value = fieldsValues ? get(fieldsValues, name) : '';\n  let isValueWrappedInPre = false;\n  if (!isUndefined__default[\"default\"](value)) {\n    if (isObject__default[\"default\"](value)) {\n      try {\n        value = React__namespace.createElement(\"pre\", {\n          style: {\n            margin: 0\n          }\n        }, React__namespace.createElement(\"code\", {\n          style: {\n            fontSize: 12\n          }\n        }, JSON.stringify(value, null, 2)));\n        isValueWrappedInPre = true;\n      } catch (_a) {\n        value = React__namespace.createElement(\"span\", null, \"[Nested Object]\");\n      }\n    } else if (typeof value !== 'string') {\n      value = String(value);\n    }\n  }\n  return React__namespace.createElement(Table, {\n    style: {\n      padding: '5px 8px',\n      width: '100%',\n      transition: '.3s all',\n      borderLeft: `2px solid ${hasError ? colors.secondary : colors.buttonBlue}`,\n      background: 'none'\n    }\n  }, React__namespace.createElement(\"thead\", null, React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    valign: \"top\",\n    style: {\n      width: 85,\n      lineHeight: '22px'\n    }\n  }, React__namespace.createElement(Button, {\n    onClick: () => setCollapse(!collapse),\n    title: \"Toggle field table\",\n    style: {\n      border: `1px solid ${colors.lightBlue}`,\n      borderRadius: 2,\n      padding: '3px 5px',\n      display: 'inline-block',\n      fontSize: 9,\n      lineHeight: '13px',\n      width: 20,\n      textAlign: 'center',\n      marginRight: 8\n    }\n  }, collapse ? '+' : '-'), React__namespace.createElement(Button, {\n    onClick: () => {\n      if (refObject.scrollIntoView) {\n        refObject.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    },\n    title: \"Scroll into view\",\n    style: Object.assign({\n      border: `1px solid ${colors.lightBlue}`,\n      borderRadius: 2,\n      padding: '3px 5px',\n      display: 'inline-block',\n      fontSize: 9,\n      lineHeight: '13px',\n      textAlign: 'center',\n      width: 'calc(100% - 30px)'\n    }, isNative ? {} : {\n      cursor: 'not-allowed',\n      background: colors.lightBlue\n    })\n  }, isNative ? 'Native' : 'Custom')), React__namespace.createElement(\"td\", {\n    style: {\n      display: 'block',\n      maxWidth: 140\n    }\n  }, React__namespace.createElement(\"p\", {\n    style: Object.assign(Object.assign({\n      margin: 0,\n      padding: 0,\n      top: 0,\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }, paraGraphDefaultStyle), {\n      lineHeight: '24px'\n    }),\n    title: name\n  }, name)))), !collapse && React__namespace.createElement(\"tbody\", null, type && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Type:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, type)), errorType && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"ERROR Type:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, errorType)), errorMessage && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"MESSAGE:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, typeof errorMessage === 'string' ? errorMessage.trim() : JSON.stringify(errorMessage))), !isUndefined__default[\"default\"](value) && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Value:\"), React__namespace.createElement(\"td\", {\n    \"data-testid\": `${name}-field-value`,\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, !isValueWrappedInPre && React__namespace.createElement(\"p\", {\n    title: value,\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0\n    })\n  }, value), isValueWrappedInPre && React__namespace.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0\n    })\n  }, value))), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Touched:\"), React__namespace.createElement(\"td\", null, React__namespace.createElement(\"code\", {\n    style: Object.assign(Object.assign({\n      color: isTouched ? colors.green : colors.lightPink\n    }, paraGraphDefaultStyle), {\n      fontSize: 12\n    })\n  }, isTouched ? 'true' : 'false'))), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Dirty:\"), React__namespace.createElement(\"td\", null, React__namespace.createElement(\"code\", {\n    style: Object.assign(Object.assign({\n      color: isDirty ? colors.green : colors.lightPink\n    }, paraGraphDefaultStyle), {\n      fontSize: 12\n    })\n  }, isDirty ? 'true' : 'false')))));\n};\nconst FormStateTable = _ref5 => {\n  let {\n    formState,\n    showFormState,\n    setShowFormState\n  } = _ref5;\n  return React__namespace.createElement(\"div\", {\n    style: {\n      alignSelf: 'end'\n    }\n  }, React__namespace.createElement(reactSimpleAnimate.Animate, {\n    play: showFormState,\n    start: {\n      opacity: 0\n    },\n    end: {\n      opacity: 1\n    },\n    render: _ref6 => {\n      let {\n        style\n      } = _ref6;\n      return React__namespace.createElement(\"table\", {\n        style: Object.assign({\n          padding: '5px 10px',\n          display: 'block',\n          background: 'black',\n          borderTop: `1px solid ${colors.lightPink}`,\n          pointerEvents: 'none'\n        }, style)\n      }, React__namespace.createElement(\"tbody\", null, React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({\n          width: 90\n        }, paraGraphDefaultStyle)\n      }, \"Valid:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isValid ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isValid ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Dirty:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isDirty ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isDirty ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Submitted:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isSubmitted ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isSubmitted ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Count:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.submitCount ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.submitCount)), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Submitting:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isSubmitting ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isSubmitting ? 'true' : 'false'))));\n    }\n  }), React__namespace.createElement(Button, {\n    style: {\n      margin: 0,\n      width: '100%',\n      padding: '8px 10px',\n      textTransform: 'none',\n      fontSize: 12,\n      lineHeight: '14px',\n      cursor: 'pointer'\n    },\n    title: \"Toggle form state panel\",\n    onClick: () => {\n      setShowFormState(!showFormState);\n    }\n  }, React__namespace.createElement(\"span\", {\n    style: {\n      transition: '0.5s all',\n      color: formState.isValid ? colors.green : colors.lightPink\n    }\n  }, \"\\u25A0\"), ' ', \"Form State: \", showFormState ? 'OFF' : 'ON'));\n};\nfunction setVisible(state, payload) {\n  return Object.assign(Object.assign({}, state), {\n    visible: payload\n  });\n}\nfunction setCollapse(state, payload) {\n  return Object.assign(Object.assign({}, state), {\n    isCollapse: payload\n  });\n}\nlet childIndex = 0;\nfunction PanelChildren(_ref7) {\n  let {\n    fields,\n    searchTerm,\n    touchedFields,\n    errors,\n    dirtyFields,\n    state,\n    fieldsValues\n  } = _ref7;\n  return React__namespace.createElement(React__namespace.Fragment, null, fields && Object.entries(fields).filter(_ref8 => {\n    let [name] = _ref8;\n    return (name && name.toLowerCase && name.toLowerCase().includes(searchTerm) || !name && !searchTerm || searchTerm === '') && name;\n  }).map((_ref9, index) => {\n    let [name, value] = _ref9;\n    childIndex++;\n    if (!(value === null || value === void 0 ? void 0 : value._f)) {\n      return React__namespace.createElement(PanelChildren, Object.assign({\n        key: name + childIndex\n      }, {\n        fields: value,\n        searchTerm,\n        touchedFields,\n        errors,\n        dirtyFields,\n        state,\n        fieldsValues\n      }));\n    } else {\n      const error = get(errors, value._f.name);\n      const errorMessage = get(error, 'message', undefined);\n      const errorType = get(error, 'type', undefined);\n      const type = get(value, 'ref.type', undefined);\n      const isTouched = !!get(touchedFields, value._f.name);\n      const isNative = !!(value && value._f.ref.type);\n      const isDirty = !!get(dirtyFields, value._f.name);\n      const hasError = !!error;\n      const ref = get(value, '_f.ref');\n      return React__namespace.createElement(\"section\", {\n        key: (value === null || value === void 0 ? void 0 : value._f.name) + childIndex,\n        style: {\n          borderBottom: `1px dashed ${colors.secondary}`,\n          margin: 0\n        }\n      }, React__namespace.createElement(PanelTable, {\n        refObject: ref,\n        index: index,\n        collapseAll: state.isCollapse,\n        name: value === null || value === void 0 ? void 0 : value._f.name,\n        isTouched: isTouched,\n        type: type,\n        hasError: hasError,\n        isNative: isNative,\n        errorMessage: errorMessage,\n        errorType: errorType,\n        isDirty: isDirty,\n        fieldsValues: fieldsValues\n      }));\n    }\n  }));\n}\nconst Panel = _ref10 => {\n  let {\n    control,\n    control: {\n      _fields\n    }\n  } = _ref10;\n  const formState = useFormState({\n    control\n  });\n  const {\n    dirtyFields,\n    touchedFields,\n    errors\n  } = formState;\n  formState.isDirty;\n  const {\n    state,\n    actions\n  } = littleStateMachine.useStateMachine({\n    setCollapse\n  });\n  const [, setData] = React__namespace.useState({});\n  const [showFormState, setShowFormState] = React__namespace.useState(false);\n  const fieldsValues = useWatch({\n    control\n  });\n  const {\n    register,\n    watch\n  } = useForm();\n  const searchTerm = watch('search', '');\n  React.useEffect(() => {\n    setData({});\n  }, []);\n  return React__namespace.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateRows: '56px auto',\n      height: 'calc(100vh - 40px)'\n    }\n  }, React__namespace.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: `1fr 1fr`,\n      gridTemplateRows: '28px 28px'\n    }\n  }, React__namespace.createElement(Button, {\n    style: {\n      borderRight: `1px solid ${colors.primary}`,\n      textTransform: 'none',\n      fontSize: 11,\n      lineHeight: 1\n    },\n    title: \"Update values and state the form\",\n    onClick: () => setData({})\n  }, \"\\u267A REFRESH\"), React__namespace.createElement(Button, {\n    style: {\n      borderRight: `1px solid ${colors.primary}`,\n      textTransform: 'none',\n      fontSize: 11,\n      lineHeight: 1\n    },\n    title: \"Toggle entire fields\",\n    onClick: () => {\n      actions.setCollapse(!state.isCollapse);\n    }\n  }, state.isCollapse ? '[-] COLLAPSE' : '[+] EXPAND'), React__namespace.createElement(Input, Object.assign({\n    style: {\n      display: 'inline-block',\n      borderRadius: 0,\n      width: '100%',\n      margin: 0,\n      padding: '5px 10px',\n      WebkitAppearance: 'none',\n      appearance: 'none',\n      fontSize: 14,\n      border: 0,\n      color: 'white',\n      gridColumnStart: 1,\n      gridColumnEnd: 4,\n      background: 'black'\n    }\n  }, register('search'), {\n    placeholder: \"Filter name...\",\n    type: \"search\"\n  }))), React__namespace.createElement(\"div\", {\n    style: {\n      overflow: 'auto'\n    }\n  }, React__namespace.createElement(PanelChildren, {\n    fields: _fields,\n    searchTerm: searchTerm,\n    errors: errors,\n    touchedFields: touchedFields,\n    dirtyFields: dirtyFields,\n    fieldsValues: fieldsValues,\n    state: state\n  })), React__namespace.createElement(FormStateTable, {\n    formState: formState,\n    showFormState: showFormState,\n    setShowFormState: setShowFormState\n  }));\n};\nconst Logo = _ref11 => {\n  let {\n    style,\n    actions\n  } = _ref11;\n  return React__namespace.createElement(\"svg\", {\n    fill: \"white\",\n    viewBox: \"0 0 100 100\",\n    style: Object.assign({\n      height: 14,\n      padding: 3,\n      borderRadius: 2,\n      background: colors.lightPink\n    }, style),\n    onClick: () => {\n      actions.setVisible(true);\n    },\n    \"aria-label\": \"React Hook Form Logo\"\n  }, React__namespace.createElement(\"path\", {\n    d: \"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\"\n  }), React__namespace.createElement(\"path\", {\n    style: {\n      transform: 'translateX(-25px)'\n    },\n    d: \"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    d: \"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    style: {\n      transform: 'translateX(-25px)'\n    },\n    d: \"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    d: \"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n  }));\n};\nfunction getPositionByPlacement(placement) {\n  let defaultX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let defaultY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const [x, y] = placement.split('-');\n  return {\n    [x]: defaultX,\n    [y]: defaultY\n  };\n}\nconst DevToolUI = _ref12 => {\n  let {\n    control,\n    placement = 'top-right',\n    styles\n  } = _ref12;\n  const {\n    state,\n    actions\n  } = littleStateMachine.useStateMachine({\n    setVisible\n  });\n  const position = getPositionByPlacement(placement, 0, 0);\n  return React__namespace.createElement(React__namespace.Fragment, null, React__namespace.createElement(reactSimpleAnimate.Animate, {\n    play: state.visible,\n    duration: 0.2,\n    start: Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      transform: placement.includes('right') ? 'translateX(280px)' : 'translateX(-280px)',\n      zIndex: 99999\n    }),\n    end: Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      transform: 'translateX(0)',\n      zIndex: 99999\n    })\n  }, React__namespace.createElement(\"div\", {\n    style: Object.assign(Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      height: '100vh',\n      width: 250,\n      zIndex: 99999,\n      background: colors.buttonBlue,\n      display: 'grid',\n      textAlign: 'left',\n      color: 'white',\n      fontSize: 14,\n      gridTemplateRows: '40px auto',\n      fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n    }), styles === null || styles === void 0 ? void 0 : styles.panel)\n  }, React__namespace.createElement(Header, {\n    setVisible: actions.setVisible,\n    control: control\n  }), React__namespace.createElement(Panel, {\n    control: control\n  }))), !state.visible && React__namespace.createElement(Button, {\n    title: \"Show dev panel\",\n    hideBackground: true,\n    style: Object.assign(Object.assign(Object.assign({\n      position: 'fixed',\n      zIndex: 99999\n    }, getPositionByPlacement(placement, 3, 3)), {\n      padding: 3,\n      margin: 0,\n      background: 'none'\n    }), styles === null || styles === void 0 ? void 0 : styles.button)\n  }, React__namespace.createElement(Logo, {\n    actions: actions\n  })));\n};\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction proxyToObject(proxy) {\n  return Reflect.ownKeys(proxy).reduce((prev, key) => {\n    prev[key] = proxy[key];\n    return prev;\n  }, {});\n}\nfunction nestToFlat(flatKeys, obj, defaultValue) {\n  return flatKeys.reduce((prev, name) => {\n    // nested field may be `undefined`\n    prev[name] = get__default[\"default\"](obj, name) || defaultValue;\n    return prev;\n  }, {});\n}\nfunction useExportControlToExtension(_ref13) {\n  let {\n    id,\n    control\n  } = _ref13;\n  const nestedFormValues = useWatch({\n    control\n  });\n  const formState = useFormState({\n    control\n  });\n  const [isExtensionEnabled, setIsExtensionEnabled] = React.useState(false);\n  const handleInitMessage = message => {\n    if (message.data.source !== 'react-hook-form-bridge' || message.data.type !== 'INIT') {\n      return;\n    }\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'WELCOME'\n    });\n    setIsExtensionEnabled(true);\n  };\n  React.useEffect(() => {\n    window.addEventListener('message', handleInitMessage);\n    return () => window.removeEventListener('message', handleInitMessage);\n  }, []);\n  useDeepCompareEffect__default[\"default\"](() => {\n    if (!isExtensionEnabled) {\n      return;\n    }\n    const _a = proxyToObject(formState),\n      {\n        errors: nestedErrors,\n        dirtyFields: nestedDirtyFields,\n        touchedFields: nestedTouchedFields\n      } = _a,\n      formStatus = __rest(_a, [\"errors\", \"dirtyFields\", \"touchedFields\"]);\n    const flatFieldNames = [...control._names.mount];\n    const formValues = nestToFlat(flatFieldNames, nestedFormValues, '');\n    const dirtyFields = nestToFlat(flatFieldNames, nestedDirtyFields, false);\n    const touchedFields = nestToFlat(flatFieldNames, nestedTouchedFields, false);\n    const flatErrors = nestToFlat(flatFieldNames, nestedErrors);\n    const errors = Object.entries(flatErrors).reduce((prev, _ref14) => {\n      let [key, value] = _ref14;\n      prev[key] = {\n        type: value === null || value === void 0 ? void 0 : value.type,\n        message: value === null || value === void 0 ? void 0 : value.message\n      };\n      return prev;\n    }, {});\n    const nativeFields = flatFieldNames.reduce((prev, name) => {\n      var _a, _b, _c;\n      prev[name] = !!((_c = (_b = (_a = get__default[\"default\"](control._fields, name)) === null || _a === void 0 ? void 0 : _a._f) === null || _b === void 0 ? void 0 : _b.ref) === null || _c === void 0 ? void 0 : _c.type);\n      return prev;\n    }, {});\n    const updateMessagePayload = {\n      id,\n      data: {\n        formValues,\n        formState: Object.assign({\n          errors,\n          dirtyFields,\n          touchedFields,\n          nativeFields\n        }, formStatus)\n      }\n    };\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'UPDATE',\n      payload: updateMessagePayload\n    });\n  }, [isExtensionEnabled, nestedFormValues, proxyToObject(formState)]);\n  return {\n    isExtensionEnabled\n  };\n}\nif (typeof window !== 'undefined') {\n  littleStateMachine.createStore({\n    visible: false,\n    isCollapse: false,\n    filterName: ''\n  }, {\n    name: '__REACT_HOOK_FORM_DEVTOOLS__',\n    middleWares: [],\n    storageType: window.localStorage\n  });\n}\nconst DevTool = props => {\n  var _a, _b, _c;\n  const methods = useFormContext();\n  const uuid$1 = React__namespace.useRef('');\n  React__namespace.useEffect(() => {\n    uuid$1.current = uuid.v4();\n  }, []);\n  const {\n    isExtensionEnabled\n  } = useExportControlToExtension({\n    id: (_a = props === null || props === void 0 ? void 0 : props.id) !== null && _a !== void 0 ? _a : uuid$1.current,\n    control: (_b = props === null || props === void 0 ? void 0 : props.control) !== null && _b !== void 0 ? _b : methods.control\n  });\n  if (isExtensionEnabled) {\n    return null;\n  }\n  return React__namespace.createElement(littleStateMachine.StateMachineProvider, null, React__namespace.createElement(DevToolUI, {\n    control: (_c = props === null || props === void 0 ? void 0 : props.control) !== null && _c !== void 0 ? _c : methods.control,\n    placement: props === null || props === void 0 ? void 0 : props.placement,\n    styles: props === null || props === void 0 ? void 0 : props.styles\n  }));\n};\nexports.DevTool = DevTool;","map":{"version":3,"names":["isCheckBoxInput","element","type","isDateObject","value","Date","isNullOrUndefined","isObjectType","isObject","Array","isArray","getEventValue","event","target","checked","getNodeParentName","name","substring","search","isNameInFieldArray","names","has","isPlainObject","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","isWeb","window","HTMLElement","document","cloneObject","data","copy","Set","Blob","FileList","key","compact","filter","Boolean","isUndefined","val","undefined","get","obj","path","defaultValue","result","split","reduce","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","HookFormContext","React__default","createContext","useFormContext","useContext","getProxyFormState","formState","control","localProxyFormState","isRoot","arguments","length","defaultValues","_defaultValues","Object","defineProperty","_key","_proxyFormState","isEmptyObject","keys","shouldRenderFormState","formStateData","updateFormState","find","convertToArrayPayload","shouldSubscribeByName","signalName","exact","some","currentName","startsWith","useSubscribe","props","_props","useRef","current","useEffect","subscription","disabled","subject","subscribe","next","unsubscribe","useFormState","methods","useState","_formState","_mounted","_localProxyFormState","isDirty","isLoading","dirtyFields","touchedFields","isValidating","isValid","errors","_name","_updateFormState","_subjects","state","_getDirty","_updateValid","isString","generateWatchOutput","_names","formValues","isGlobal","watch","add","map","fieldName","watchAll","useWatch","values","updateValue","_formValues","_getWatch","_removeUnmounted","isKey","test","stringToPath","input","replace","set","object","index","tempPath","lastIndex","newValue","objValue","isNaN","appendErrors","validateAllFieldCriteria","message","types","focusFieldBy","fields","callback","fieldsNames","field","_f","currentField","ref","focus","refs","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","watchName","slice","updateFieldArrayRootError","error","fieldArrayErrors","isBoolean","isFileInput","isFunction","isHTMLElement","owner","ownerDocument","defaultView","isMessage","isRadioInput","isRegex","RegExp","defaultResult","validResult","getCheckboxValue","options","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","getValueAndMessage","validationData","validateField","shouldUseNativeValidation","isFieldArray","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueNumber","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","baseGet","updatePath","isEmptyArray","unset","paths","childObject","createSubject","_observers","observer","push","o","observers","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","val1","includes","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","_ref","setValueAs","NaN","getFieldValue","files","selectedOptions","_ref2","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","source","hasValidation","schemaErrorLookup","join","foundError","pop","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","shouldFocusError","createFormControl","flushRootRender","_options","submitCount","isSubmitting","isSubmitSuccessful","shouldUnregister","_state","action","unMount","array","delayErrorCallback","timer","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","clearTimeout","setTimeout","shouldUpdateValid","resolver","_executeSchema","executeBuiltInValidation","_updateIsValidating","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","argA","argB","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updatedFormState","context","executeSchemaAndUpdateState","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","unregister","getValues","_getFieldArray","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","getCurrentFieldValue","shouldSkipValidation","deps","watched","previousErrorLookupResult","errorLookupResult","fieldNames","Promise","shouldFocus","getFieldState","invalid","clearErrors","inputName","setError","payload","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","register","disabledIsDefined","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","e","preventDefault","persist","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","shouldSelect","select","then","useForm","_formControl","colors","primary","secondary","lightBlue","blue","lightPink","errorPink","buttonBlue","link","green","paraGraphDefaultStyle","fontSize","lineHeight","Button","styled__default","button","hideBackground","defaultProps","CircleButton","Input","Table","table","Header","_ref3","setVisible","React__namespace","createElement","style","display","alignItems","paddingLeft","backgroundColor","assign","margin","padding","fontWeight","transition","color","title","onClick","PanelTable","_ref4","refObject","hasError","fieldsValues","isNative","errorMessage","errorType","collapseAll","collapse","setCollapse","isValueWrappedInPre","isUndefined__default","isObject__default","JSON","stringify","_a","String","width","borderLeft","background","valign","border","borderRadius","textAlign","marginRight","scrollIntoView","behavior","cursor","maxWidth","top","position","whiteSpace","overflow","textOverflow","align","paddingRight","verticalAlign","trim","FormStateTable","_ref5","showFormState","setShowFormState","alignSelf","reactSimpleAnimate","Animate","play","start","opacity","end","render","_ref6","borderTop","pointerEvents","textTransform","visible","isCollapse","childIndex","PanelChildren","_ref7","searchTerm","Fragment","entries","_ref8","toLowerCase","_ref9","borderBottom","Panel","_ref10","actions","littleStateMachine","useStateMachine","setData","React","gridTemplateRows","height","gridTemplateColumns","borderRight","WebkitAppearance","appearance","gridColumnStart","gridColumnEnd","placeholder","Logo","_ref11","fill","viewBox","d","transform","getPositionByPlacement","placement","defaultX","defaultY","x","y","DevToolUI","_ref12","styles","duration","zIndex","fontFamily","panel","proxyToObject","proxy","Reflect","ownKeys","prev","nestToFlat","flatKeys","get__default","useExportControlToExtension","_ref13","id","nestedFormValues","isExtensionEnabled","setIsExtensionEnabled","handleInitMessage","postMessage","addEventListener","removeEventListener","useDeepCompareEffect__default","nestedErrors","nestedDirtyFields","nestedTouchedFields","formStatus","__rest","flatFieldNames","flatErrors","_ref14","nativeFields","_c","_b","updateMessagePayload","createStore","filterName","middleWares","storageType","localStorage","DevTool","uuid$1","uuid","v4","StateMachineProvider"],"sources":["/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isDateObject.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isObject.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getEventValue.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getNodeParentName.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isPlainObject.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isWeb.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/cloneObject.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/compact.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isUndefined.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/get.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/constants.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useFormContext.tsx","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getProxyFormState.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isEmptyObject.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/shouldSubscribeByName.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useSubscribe.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useFormState.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isString.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/generateWatchOutput.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useWatch.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isKey.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/stringToPath.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/set.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/appendErrors.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/focusFieldBy.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getValidationModes.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/isWatched.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isBoolean.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isFileInput.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isFunction.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isHTMLElement.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isMessage.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isRadioInput.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isRegex.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getCheckboxValue.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getRadioValue.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getValidateError.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getValueAndMessage.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/validateField.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/unset.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/createSubject.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isPrimitive.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/deepEqual.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isMultipleSelect.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/live.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/objectHasFunction.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getDirtyFields.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getFieldValueAs.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getFieldValue.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getResolverOptions.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getRuleValue.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/hasValidation.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/skipValidation.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/createFormControl.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useForm.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/colors.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/styled.tsx","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/header.tsx","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/panelTable.tsx","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/formStateTable.tsx","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/settingAction.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/panel.tsx","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/logo.tsx","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/position.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/devToolUI.tsx","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/extension/utils.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/extension/useExportControlToExtension.ts","/Users/natnaelganoro/Downloads/01-starting-setup/node_modules/@hookform/devtools/src/devTool.tsx"],"sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path?: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues, TContext = any>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport {\n  Control,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  ReadFormState,\n} from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends FieldValues, K extends ReadFormState>(\n  formStateData: Partial<FormState<T>> & { name?: InternalFieldName },\n  _proxyFormState: K,\n  updateFormState: Control<T>['_updateFormState'],\n  isRoot?: boolean,\n) => {\n  updateFormState(formStateData);\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  exact && signalName\n    ? name === signalName\n    : !name ||\n      !signalName ||\n      name === signalName ||\n      convertToArrayPayload(name).some(\n        (currentName) =>\n          currentName &&\n          (currentName.startsWith(signalName) ||\n            signalName.startsWith(currentName)),\n      );\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  next: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject &&\n      _props.current.subject.subscribe({\n        next: _props.current.next,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _mounted = React.useRef(true);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) =>\n      _mounted.current &&\n      shouldSubscribeByName(\n        _name.current as InternalFieldName,\n        value.name,\n        exact,\n      ) &&\n      shouldRenderFormState(\n        value,\n        _localProxyFormState.current,\n        control._updateFormState,\n      ) &&\n      updateFormState({\n        ...control._formState,\n        ...value,\n      }),\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(() => {\n    _mounted.current = true;\n    const isDirty = control._proxyFormState.isDirty && control._getDirty();\n\n    if (isDirty !== control._formState.isDirty) {\n      control._subjects.state.next({\n        isDirty,\n      });\n    }\n\n    _localProxyFormState.current.isValid && control._updateValid(true);\n\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n\n  return getProxyFormState(\n    formState,\n    control,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { DeepPartial, FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default <T>(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n  defaultValue?: DeepPartial<T> | unknown,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport cloneObject from './utils/cloneObject';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.values,\n    next: (formState: { name?: InternalFieldName; values?: FieldValues }) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n          exact,\n        )\n      ) {\n        updateValue(\n          cloneObject(\n            generateWatchOutput(\n              _name.current as InternalFieldName | InternalFieldName[],\n              control._names,\n              formState.values || control._formValues,\n              false,\n              defaultValue,\n            ),\n          ),\n        );\n      }\n    },\n  });\n\n  const [value, updateValue] = React.useState(\n    control._getWatch(\n      name as InternalFieldName,\n      defaultValue as DeepPartialSkipArrayKey<TFieldValues>,\n    ),\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name?: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport compact from '../utils/compact';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isWeb from './isWeb';\n\nexport default (value: unknown): value is HTMLElement => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message => isString(value);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  FieldValues,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends FieldValues>(\n  field: Field,\n  formValues: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  const inputValue: NativeFieldValue = get(formValues, name);\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    (isHTMLElement(ref) && ref.value === '') ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n          ? inputValue > maxOutput.value\n          : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n          ? inputValue < minOutput.value\n          : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue, formValues),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string | (string | number)[]) {\n  const paths = Array.isArray(path)\n    ? path\n    : isKey(path)\n    ? [path]\n    : stringToPath(path);\n\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (\n    index !== 0 &&\n    ((isObject(childObject) && isEmptyObject(childObject)) ||\n      (Array.isArray(childObject) && isEmptyArray(childObject)))\n  ) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : value\n      ? +value\n      : value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n  flushRootRender: () => void,\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: true,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {},\n  };\n  let _fields = {};\n  let _defaultValues =\n    isObject(_options.defaultValues) || isObject(_options.values)\n      ? cloneObject(_options.defaultValues || _options.values) || {}\n      : {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const shouldCaptureDirtyFields =\n    props.resetOptions && props.resetOptions.keepDirtyValues;\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n\n  const _updateValid = async (shouldUpdateValid?: boolean) => {\n    if (_proxyFormState.isValid || shouldUpdateValid) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (value: boolean) =>\n    _proxyFormState.isValidating &&\n    _subjects.state.next({\n      isValidating: value,\n    });\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _state.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isPreviousDirty = get(_formState.dirtyFields, name);\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField =\n        shouldUpdateField ||\n        (_proxyFormState.dirtyFields &&\n          isPreviousDirty !== !isCurrentFieldPristine);\n    }\n\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.touchedFields &&\n            isPreviousFieldTouched !== isBlurEvent);\n      }\n    }\n\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    _updateIsValidating(false);\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n            isFieldArrayRoot,\n          );\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_state.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n          ? _defaultValues\n          : isString(names)\n          ? { [names]: defaultValue }\n          : defaultValue),\n      },\n      isGlobal,\n      defaultValue,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _state.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: { ..._formValues },\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: { ..._formValues },\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState });\n    _subjects.values.next({\n      name,\n      values: { ..._formValues },\n    });\n    !_state.mount && flushRootRender();\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n    const getCurrentFieldValue = () =>\n      target.type ? getFieldValue(field._f) : getEventValue(event);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.values.next({\n          name,\n          type: event.type,\n          values: { ..._formValues },\n        });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n\n      _updateIsValidating(true);\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        if (error) {\n          isValid = false;\n        } else if (_proxyFormState.isValid) {\n          isValid = await executeBuiltInValidation(_fields, true);\n        }\n      }\n\n      field._f.deps &&\n        trigger(\n          field._f.deps as FieldPath<TFieldValues> | FieldPath<TFieldValues>[],\n        );\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _updateIsValidating(true);\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => key && get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_state.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames)\n      : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      convertToArrayPayload(name).forEach((inputName) =>\n        unset(_formState.errors, inputName),\n      );\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.values.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.values.next({\n      values: { ..._formValues },\n    });\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _state.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    focusFieldBy(\n      _fields,\n      (key) => key && get(_formState.errors, key),\n      _names.mount,\n    );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let fieldValues = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      if (_options.resolver) {\n        const { errors, values } = await _executeSchema();\n        _formState.errors = errors;\n        fieldValues = values;\n      } else {\n        await executeBuiltInValidation(_fields);\n      }\n\n      unset(_formState.errors, 'root');\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n        });\n        await onValid(fieldValues as TFieldValues, e);\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        _focusError();\n        setTimeout(_focusError);\n      }\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors),\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors,\n      });\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values: { ...values },\n      });\n\n      _subjects.values.next({\n        values: { ...values },\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    !_state.mount && flushRootRender();\n\n    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _state.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: keepStateOptions.keepDirty\n        ? _formState.isDirty\n        : !!(\n            keepStateOptions.keepDefaultValues &&\n            !deepEqual(formValues, _defaultValues)\n          ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: keepStateOptions.keepDirtyValues\n        ? _formState.dirtyFields\n        : keepStateOptions.keepDefaultValues && formValues\n        ? getDirtyFields(_defaultValues, formValues)\n        : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? formValues(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  const _updateFormState = (\n    updatedFormState: Partial<FormState<TFieldValues>>,\n  ) => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState,\n    };\n  };\n\n  if (isFunction(_options.defaultValues)) {\n    _options.defaultValues().then((values) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n  }\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _reset,\n      _updateFormState,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport deepEqual from './utils/deepEqual';\nimport isFunction from './utils/isFunction';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: true,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props, () =>\n        updateFormState((formState) => ({ ...formState })),\n      ),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) => {\n      if (\n        shouldRenderFormState(\n          value,\n          control._proxyFormState,\n          control._updateFormState,\n          true,\n        )\n      ) {\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, control._defaultValues)) {\n      control._reset(props.values, control._options.resetOptions);\n    }\n  }, [props.values, control]);\n\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({ ...control._formState });\n    }\n\n    control._removeUnmounted();\n  });\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n","export default {\n  primary: '#0e101c',\n  secondary: '#bf1650',\n  lightBlue: '#516391',\n  blue: '#1e2a4a',\n  lightPink: '#ec5990',\n  errorPink: '#fbecf2',\n  buttonBlue: '#191d3a',\n  link: '#ff7aa8',\n  green: '#1bda2b',\n};\n","import styled from '@emotion/styled';\n\nimport colors from './colors';\n\nexport const paraGraphDefaultStyle = {\n  fontSize: 13,\n  lineHeight: '20px',\n};\n\nconst Button = styled.button<{ hideBackground?: boolean }>`\n  appearance: none;\n  margin: 0;\n  border: 0;\n  color: white;\n  padding: 5px !important;\n  border-radius: 0 !important;\n  background: ${(props: { hideBackground?: boolean }) =>\n    props.hideBackground ? `` : `${colors.blue} !important`};\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n`;\n\nButton.defaultProps = { type: 'button' };\n\nconst CircleButton = styled(Button)`\n  font-size: 14px;\n  font-weight: bold;\n  margin: 0 4px 0 auto;\n  background: none !important;\n  display: flex;\n  width: 25px;\n  height: 25px;\n  justify-content: center;\n  line-height: 14px !important;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n\n  &:active {\n    background: black;\n  }\n`;\n\nconst Input = styled.input`\n  &::placeholder {\n    color: #b3b3b3;\n  }\n\n  &:focus::placeholder {\n    color: white;\n  }\n`;\n\nconst Table = styled.table`\n  transition: 0.3s all;\n\n  &:hover {\n    background: ${colors.primary};\n  }\n`;\n\nexport { Button, CircleButton, Input, Table };\n","import * as React from 'react';\nimport { Control, useFormState } from 'react-hook-form';\n\nimport colors from './colors';\nimport { CircleButton, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  setVisible: any;\n  control: Control;\n};\n\nconst Header = ({ setVisible, control }: Props) => {\n  const { isValid } = useFormState({\n    control,\n  });\n\n  return (\n    <header\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 10,\n        backgroundColor: 'transparent',\n      }}\n    >\n      <p\n        style={{\n          ...paraGraphDefaultStyle,\n          margin: 0,\n          padding: 0,\n          fontWeight: 400,\n          fontSize: 12,\n        }}\n      >\n        <span\n          style={{\n            transition: '0.5s all',\n            color: isValid ? colors.green : colors.lightPink,\n          }}\n        >\n          ■\n        </span>{' '}\n        React Hook Form\n      </p>\n      <CircleButton title=\"Close dev panel\" onClick={() => setVisible(false)}>\n        ✕\n      </CircleButton>\n    </header>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport { get } from 'react-hook-form';\nimport isUndefined from 'lodash/isUndefined';\nimport isObject from 'lodash/isObject';\n\nimport colors from './colors';\nimport { Button, Table, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  isNative: boolean;\n  errorMessage: string | undefined;\n  errorType: string | undefined;\n  hasError: boolean;\n  type: string | undefined;\n  isTouched: boolean;\n  isDirty: boolean;\n  index: number;\n  fieldsValues: any;\n  name: string;\n  collapseAll: boolean;\n  refObject: any;\n};\n\nconst PanelTable = ({\n  refObject,\n  hasError,\n  isDirty,\n  fieldsValues,\n  isNative,\n  errorMessage,\n  errorType,\n  type,\n  isTouched,\n  name,\n  collapseAll,\n}: Props) => {\n  const [collapse, setCollapse] = React.useState(false);\n\n  React.useEffect(() => {\n    setCollapse(!collapseAll);\n  }, [collapseAll]);\n\n  let value = fieldsValues ? get(fieldsValues, name) : '';\n  let isValueWrappedInPre = false;\n\n  if (!isUndefined(value)) {\n    if (isObject(value)) {\n      try {\n        value = (\n          <pre style={{ margin: 0 }}>\n            <code style={{ fontSize: 12 }}>\n              {JSON.stringify(value, null, 2)}\n            </code>\n          </pre>\n        );\n        isValueWrappedInPre = true;\n      } catch {\n        value = <span>[Nested Object]</span>;\n      }\n    } else if (typeof value !== 'string') {\n      value = String(value);\n    }\n  }\n\n  return (\n    <Table\n      style={{\n        padding: '5px 8px',\n        width: '100%',\n        transition: '.3s all',\n        borderLeft: `2px solid ${\n          hasError ? colors.secondary : colors.buttonBlue\n        }`,\n        background: 'none',\n      }}\n    >\n      <thead>\n        <tr>\n          <td valign=\"top\" style={{ width: 85, lineHeight: '22px' }}>\n            <Button\n              onClick={() => setCollapse(!collapse)}\n              title=\"Toggle field table\"\n              style={{\n                border: `1px solid ${colors.lightBlue}`,\n                borderRadius: 2,\n                padding: '3px 5px',\n                display: 'inline-block',\n                fontSize: 9,\n                lineHeight: '13px',\n                width: 20,\n                textAlign: 'center',\n                marginRight: 8,\n              }}\n            >\n              {collapse ? '+' : '-'}\n            </Button>\n            <Button\n              onClick={() => {\n                if (refObject.scrollIntoView) {\n                  refObject.scrollIntoView({ behavior: 'smooth' });\n                }\n              }}\n              title=\"Scroll into view\"\n              style={{\n                border: `1px solid ${colors.lightBlue}`,\n                borderRadius: 2,\n                padding: '3px 5px',\n                display: 'inline-block',\n                fontSize: 9,\n                lineHeight: '13px',\n                textAlign: 'center',\n                width: 'calc(100% - 30px)',\n                ...(isNative\n                  ? {}\n                  : { cursor: 'not-allowed', background: colors.lightBlue }),\n              }}\n            >\n              {isNative ? 'Native' : 'Custom'}\n            </Button>\n          </td>\n          <td\n            style={{\n              display: 'block',\n              maxWidth: 140,\n            }}\n          >\n            <p\n              style={{\n                margin: 0,\n                padding: 0,\n                top: 0,\n                position: 'relative',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                ...paraGraphDefaultStyle,\n                lineHeight: '24px',\n              }}\n              title={name}\n            >\n              {name}\n            </p>\n          </td>\n        </tr>\n      </thead>\n      {!collapse && (\n        <tbody>\n          {type && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Type:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {type}\n              </td>\n            </tr>\n          )}\n          {errorType && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                ERROR Type:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {errorType}\n              </td>\n            </tr>\n          )}\n          {errorMessage && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                MESSAGE:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {typeof errorMessage === 'string'\n                  ? errorMessage.trim()\n                  : JSON.stringify(errorMessage)}\n              </td>\n            </tr>\n          )}\n          {!isUndefined(value) && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Value:\n              </td>\n              <td\n                data-testid={`${name}-field-value`}\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {!isValueWrappedInPre && (\n                  <p\n                    title={value}\n                    style={{\n                      ...paraGraphDefaultStyle,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {value}\n                  </p>\n                )}\n                {isValueWrappedInPre && (\n                  <div\n                    style={{\n                      ...paraGraphDefaultStyle,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {value}\n                  </div>\n                )}\n              </td>\n            </tr>\n          )}\n          {\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Touched:\n              </td>\n              <td>\n                <code\n                  style={{\n                    color: isTouched ? colors.green : colors.lightPink,\n                    ...paraGraphDefaultStyle,\n                    fontSize: 12,\n                  }}\n                >\n                  {isTouched ? 'true' : 'false'}\n                </code>\n              </td>\n            </tr>\n          }\n          {\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Dirty:\n              </td>\n              <td>\n                <code\n                  style={{\n                    color: isDirty ? colors.green : colors.lightPink,\n                    ...paraGraphDefaultStyle,\n                    fontSize: 12,\n                  }}\n                >\n                  {isDirty ? 'true' : 'false'}\n                </code>\n              </td>\n            </tr>\n          }\n        </tbody>\n      )}\n    </Table>\n  );\n};\n\nexport default PanelTable;\n","import * as React from 'react';\nimport { Animate } from 'react-simple-animate';\n\nimport colors from './colors';\nimport { Button, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  formState: any;\n  showFormState: boolean;\n  setShowFormState: (payload: boolean) => void;\n};\n\nconst FormStateTable = ({\n  formState,\n  showFormState,\n  setShowFormState,\n}: Props) => (\n  <div\n    style={{\n      alignSelf: 'end',\n    }}\n  >\n    <Animate\n      play={showFormState}\n      start={{ opacity: 0 }}\n      end={{ opacity: 1 }}\n      render={({ style }) => (\n        <table\n          style={{\n            padding: '5px 10px',\n            display: 'block',\n            background: 'black',\n            borderTop: `1px solid ${colors.lightPink}`,\n            pointerEvents: 'none',\n            ...style,\n          }}\n        >\n          <tbody>\n            <tr>\n              <td align=\"right\" style={{ width: 90, ...paraGraphDefaultStyle }}>\n                Valid:\n              </td>\n              <td\n                style={{\n                  color: formState.isValid ? colors.green : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isValid ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Dirty:\n              </td>\n              <td\n                style={{\n                  color: formState.isDirty ? colors.green : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isDirty ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Submitted:\n              </td>\n              <td\n                style={{\n                  color: formState.isSubmitted\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isSubmitted ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Count:\n              </td>\n              <td\n                style={{\n                  color: formState.submitCount\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.submitCount}\n              </td>\n            </tr>\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Submitting:\n              </td>\n              <td\n                style={{\n                  color: formState.isSubmitting\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isSubmitting ? 'true' : 'false'}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      )}\n    />\n    <Button\n      style={{\n        margin: 0,\n        width: '100%',\n        padding: '8px 10px',\n        textTransform: 'none',\n        fontSize: 12,\n        lineHeight: '14px',\n        cursor: 'pointer',\n      }}\n      title=\"Toggle form state panel\"\n      onClick={() => {\n        setShowFormState(!showFormState);\n      }}\n    >\n      <span\n        style={{\n          transition: '0.5s all',\n          color: formState.isValid ? colors.green : colors.lightPink,\n        }}\n      >\n        ■\n      </span>{' '}\n      Form State: {showFormState ? 'OFF' : 'ON'}\n    </Button>\n  </div>\n);\n\nexport default FormStateTable;\n","export function setVisible(state: any, payload: any) {\n  return {\n    ...state,\n    visible: payload,\n  };\n}\n\nexport function setCollapse(state: any, payload: any) {\n  return {\n    ...state,\n    isCollapse: payload,\n  };\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { Control, useForm, useWatch, useFormState, get } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\n\nimport colors from './colors';\nimport PanelTable from './panelTable';\nimport FormStateTable from './formStateTable';\nimport { Button, Input } from './styled';\nimport { setCollapse } from './settingAction';\n\nlet childIndex = 0;\n\nfunction PanelChildren<T, K, L, M, G>({\n  fields,\n  searchTerm,\n  touchedFields,\n  errors,\n  dirtyFields,\n  state,\n  fieldsValues,\n}: {\n  fields: T;\n  fieldsValues: K;\n  state: {\n    isCollapse: boolean;\n  };\n  searchTerm: string;\n  touchedFields: M;\n  errors: L;\n  dirtyFields: G;\n}) {\n  return (\n    <>\n      {fields &&\n        Object.entries(fields)\n          .filter(\n            ([name]) =>\n              ((name &&\n                name.toLowerCase &&\n                name.toLowerCase().includes(searchTerm)) ||\n                (!name && !searchTerm) ||\n                searchTerm === '') &&\n              name,\n          )\n          .map(([name, value], index) => {\n            childIndex++;\n\n            if (!value?._f) {\n              return (\n                <PanelChildren\n                  key={name + childIndex}\n                  {...{\n                    fields: value,\n                    searchTerm,\n                    touchedFields,\n                    errors,\n                    dirtyFields,\n                    state,\n                    fieldsValues,\n                  }}\n                />\n              );\n            } else {\n              const error = get(errors, value._f.name);\n              const errorMessage = get(error, 'message', undefined);\n              const errorType = get(error, 'type', undefined);\n              const type = get(value, 'ref.type', undefined);\n              const isTouched = !!get(touchedFields, value._f.name);\n              const isNative = !!(value && value._f.ref.type);\n              const isDirty = !!get(dirtyFields, value._f.name);\n              const hasError = !!error;\n              const ref = get(value, '_f.ref');\n\n              return (\n                <section\n                  key={value?._f.name + childIndex}\n                  style={{\n                    borderBottom: `1px dashed ${colors.secondary}`,\n                    margin: 0,\n                  }}\n                >\n                  <PanelTable\n                    refObject={ref}\n                    index={index}\n                    collapseAll={state.isCollapse}\n                    name={value?._f.name}\n                    isTouched={isTouched}\n                    type={type}\n                    hasError={hasError}\n                    isNative={isNative}\n                    errorMessage={errorMessage}\n                    errorType={errorType}\n                    isDirty={isDirty}\n                    fieldsValues={fieldsValues}\n                  />\n                </section>\n              );\n            }\n          })}\n    </>\n  );\n}\n\nconst Panel = ({ control, control: { _fields } }: { control: Control }) => {\n  const formState = useFormState({\n    control,\n  });\n  const { dirtyFields, touchedFields, errors } = formState;\n  formState.isDirty;\n  const { state, actions } = useStateMachine({\n    setCollapse,\n  });\n  const [, setData] = React.useState({});\n  const [showFormState, setShowFormState] = React.useState(false);\n  const fieldsValues = useWatch({\n    control,\n  });\n  const { register, watch } = useForm();\n  const searchTerm = watch('search', '');\n\n  useEffect(() => {\n    setData({});\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateRows: '56px auto',\n        height:\n          process.env.NODE_ENV === 'test' ? '100vh' : 'calc(100vh - 40px)',\n      }}\n    >\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `1fr 1fr`,\n          gridTemplateRows: '28px 28px',\n        }}\n      >\n        <Button\n          style={{\n            borderRight: `1px solid ${colors.primary}`,\n            textTransform: 'none',\n            fontSize: 11,\n            lineHeight: 1,\n          }}\n          title=\"Update values and state the form\"\n          onClick={() => setData({})}\n        >\n          ♺ REFRESH\n        </Button>\n        <Button\n          style={{\n            borderRight: `1px solid ${colors.primary}`,\n            textTransform: 'none',\n            fontSize: 11,\n            lineHeight: 1,\n          }}\n          title=\"Toggle entire fields\"\n          onClick={() => {\n            actions.setCollapse(!state.isCollapse);\n          }}\n        >\n          {state.isCollapse ? '[-] COLLAPSE' : '[+] EXPAND'}\n        </Button>\n\n        <Input\n          style={{\n            display: 'inline-block',\n            borderRadius: 0,\n            width: '100%',\n            margin: 0,\n            padding: '5px 10px',\n            WebkitAppearance: 'none',\n            appearance: 'none',\n            fontSize: 14,\n            border: 0,\n            color: 'white',\n            gridColumnStart: 1,\n            gridColumnEnd: 4,\n            background: 'black',\n          }}\n          {...register('search')}\n          placeholder=\"Filter name...\"\n          type=\"search\"\n        />\n      </div>\n\n      <div\n        style={{\n          overflow: 'auto',\n        }}\n      >\n        <PanelChildren\n          fields={_fields}\n          searchTerm={searchTerm}\n          errors={errors}\n          touchedFields={touchedFields}\n          dirtyFields={dirtyFields}\n          fieldsValues={fieldsValues}\n          state={state}\n        />\n      </div>\n\n      <FormStateTable\n        formState={formState}\n        showFormState={showFormState}\n        setShowFormState={setShowFormState}\n      />\n    </div>\n  );\n};\n\nexport default Panel;\n","import * as React from 'react';\n\nimport colors from './colors';\n\nconst Logo = ({\n  style,\n  actions,\n}: {\n  style?: Record<string, any>;\n  actions: {\n    setVisible: (arg: boolean) => void;\n  };\n}) => {\n  return (\n    <svg\n      fill=\"white\"\n      viewBox=\"0 0 100 100\"\n      style={{\n        height: 14,\n        padding: 3,\n        borderRadius: 2,\n        background: colors.lightPink,\n        ...style,\n      }}\n      onClick={() => {\n        actions.setVisible(true);\n      }}\n      aria-label=\"React Hook Form Logo\"\n    >\n      <path d=\"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\" />\n      <path\n        style={{ transform: 'translateX(-25px)' }}\n        d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n      />\n      <path d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\" />\n      <path\n        style={{ transform: 'translateX(-25px)' }}\n        d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n      />\n      <path d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\" />\n    </svg>\n  );\n};\n\nexport default Logo;\n","export type PLACEMENT =\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right';\n\nexport function getPositionByPlacement(\n  placement: PLACEMENT,\n  defaultX = 0,\n  defaultY = 0,\n) {\n  const [x, y] = placement.split('-');\n  return {\n    [x]: defaultX,\n    [y]: defaultY,\n  };\n}\n","import * as React from 'react';\nimport { Control } from 'react-hook-form';\nimport { Animate } from 'react-simple-animate';\n\nimport Header from './header';\nimport Panel from './panel';\nimport colors from './colors';\nimport Logo from './logo';\nimport { Button } from './styled';\nimport { useStateMachine } from 'little-state-machine';\nimport { setVisible } from './settingAction';\nimport { PLACEMENT, getPositionByPlacement } from './position';\n\nexport interface DevtoolUIProps {\n  control: Control<any>;\n  placement?: PLACEMENT;\n  /** Custom styles for the \"show/hide panel\" button and for the panel div */\n  styles?: {\n    /** Custom styles for the \"show/hide panel\" button */\n    button?: React.HTMLAttributes<HTMLButtonElement>['style'];\n    /** Custom styles for the panel div */\n    panel?: React.HTMLAttributes<HTMLDivElement>['style'];\n  };\n}\n\nexport const DevToolUI: React.FC<DevtoolUIProps> = ({\n  control,\n  placement = 'top-right',\n  styles,\n}) => {\n  const { state, actions } = useStateMachine({\n    setVisible,\n  });\n\n  const position = getPositionByPlacement(placement, 0, 0);\n\n  return (\n    <>\n      <Animate\n        play={state.visible}\n        duration={0.2}\n        start={{\n          ...position,\n          position: 'fixed',\n          transform: placement.includes('right')\n            ? 'translateX(280px)'\n            : 'translateX(-280px)',\n          zIndex: 99999,\n        }}\n        end={{\n          ...position,\n          position: 'fixed',\n          transform: 'translateX(0)',\n          zIndex: 99999,\n        }}\n      >\n        <div\n          style={{\n            ...position,\n            position: 'fixed',\n            height: '100vh',\n            width: 250,\n            zIndex: 99999,\n            background: colors.buttonBlue,\n            display: 'grid',\n            textAlign: 'left',\n            color: 'white',\n            fontSize: 14,\n            gridTemplateRows: '40px auto',\n            fontFamily:\n              \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n            ...styles?.panel,\n          }}\n        >\n          <Header setVisible={actions.setVisible} control={control} />\n          <Panel control={control} />\n        </div>\n      </Animate>\n\n      {!state.visible && (\n        <Button\n          title=\"Show dev panel\"\n          hideBackground\n          style={{\n            position: 'fixed',\n            zIndex: 99999,\n            ...getPositionByPlacement(placement, 3, 3),\n            padding: 3,\n            margin: 0,\n            background: 'none',\n            ...styles?.button,\n          }}\n        >\n          <Logo actions={actions} />\n        </Button>\n      )}\n    </>\n  );\n};\n","import get from 'lodash/get';\n\nexport function proxyToObject<T extends Record<string, any>>(proxy: T) {\n  return Reflect.ownKeys(proxy).reduce((prev, key) => {\n    prev[key as keyof T] = proxy[key as keyof T];\n    return prev;\n  }, {} as T);\n}\n\nexport function nestToFlat<V>(\n  flatKeys: string[],\n  obj: object,\n  defaultValue?: V,\n) {\n  return flatKeys.reduce((prev, name) => {\n    // nested field may be `undefined`\n    prev[name] = get(obj, name) || defaultValue;\n    return prev;\n  }, {} as Record<string, V>);\n}\n","import get from 'lodash/get';\nimport { useEffect, useState } from 'react';\nimport { Control, useFormState, useWatch } from 'react-hook-form';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { MessageData, UpdatePayload } from './types';\nimport { nestToFlat, proxyToObject } from './utils';\n\nexport function useExportControlToExtension({\n  id,\n  control,\n}: {\n  id: string;\n  control: Control<any>;\n}) {\n  const nestedFormValues = useWatch({ control });\n  const formState = useFormState({ control });\n\n  const [isExtensionEnabled, setIsExtensionEnabled] = useState(false);\n\n  const handleInitMessage = (message: MessageEvent<MessageData>) => {\n    if (\n      message.data.source !== 'react-hook-form-bridge' ||\n      message.data.type !== 'INIT'\n    ) {\n      return;\n    }\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'WELCOME',\n    } as MessageData);\n    setIsExtensionEnabled(true);\n  };\n\n  useEffect(() => {\n    window.addEventListener('message', handleInitMessage);\n    return () => window.removeEventListener('message', handleInitMessage);\n  }, []);\n\n  useDeepCompareEffect(() => {\n    if (!isExtensionEnabled) {\n      return;\n    }\n\n    const {\n      errors: nestedErrors,\n      dirtyFields: nestedDirtyFields,\n      touchedFields: nestedTouchedFields,\n      ...formStatus\n    } = proxyToObject(formState);\n\n    const flatFieldNames = [...control._names.mount];\n\n    const formValues = nestToFlat(flatFieldNames, nestedFormValues, '');\n    const dirtyFields = nestToFlat(flatFieldNames, nestedDirtyFields, false);\n    const touchedFields = nestToFlat(\n      flatFieldNames,\n      nestedTouchedFields,\n      false,\n    );\n    const flatErrors = nestToFlat<{ type?: string; message?: string }>(\n      flatFieldNames,\n      nestedErrors,\n    );\n\n    const errors = Object.entries(flatErrors).reduce((prev, [key, value]) => {\n      prev[key] = {\n        type: value?.type as string,\n        message: value?.message as string,\n      };\n      return prev;\n    }, {} as Record<string, { type?: string; message?: string }>);\n\n    const nativeFields = flatFieldNames.reduce((prev, name) => {\n      prev[name] = !!get(control._fields, name)?._f?.ref?.type;\n      return prev;\n    }, {} as Record<string, boolean>);\n\n    const updateMessagePayload: UpdatePayload = {\n      id,\n      data: {\n        formValues,\n        formState: {\n          errors,\n          dirtyFields,\n          touchedFields,\n          nativeFields,\n          ...formStatus,\n        },\n      },\n    };\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'UPDATE',\n      payload: updateMessagePayload,\n    } as MessageData);\n  }, [isExtensionEnabled, nestedFormValues, proxyToObject(formState)]);\n\n  return { isExtensionEnabled };\n}\n","import { createStore, StateMachineProvider } from 'little-state-machine';\nimport * as React from 'react';\nimport { Control, FieldValues, useFormContext } from 'react-hook-form';\nimport { v4 as generateUUID } from 'uuid';\nimport { DevToolUI, DevtoolUIProps } from './devToolUI';\nimport { useExportControlToExtension } from './extension/useExportControlToExtension';\nimport type { PLACEMENT } from './position';\n\nif (typeof window !== 'undefined') {\n  createStore(\n    {\n      visible: false,\n      isCollapse: false,\n      filterName: '',\n    },\n    {\n      name: '__REACT_HOOK_FORM_DEVTOOLS__',\n      middleWares: [],\n      storageType: window.localStorage,\n    },\n  );\n}\n\nexport const DevTool = <T extends FieldValues>(\n  props?: {\n    id?: string;\n    control?: Control<T>;\n  } & Pick<DevtoolUIProps, 'placement' | 'styles'>,\n) => {\n  const methods = useFormContext();\n\n  const uuid = React.useRef('');\n\n  React.useEffect(() => {\n    uuid.current = generateUUID();\n  }, []);\n\n  const { isExtensionEnabled } = useExportControlToExtension({\n    id: props?.id ?? uuid.current,\n    control: props?.control ?? methods.control,\n  });\n  if (isExtensionEnabled) {\n    return null;\n  }\n\n  return (\n    <StateMachineProvider>\n      <DevToolUI\n        control={props?.control ?? methods.control}\n        placement={props?.placement}\n        styles={props?.styles}\n      />\n    </StateMachineProvider>\n  );\n};\n\nexport type { PLACEMENT };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}